// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["driverAdapters"]
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")


    // Note: https://stackoverflow.com/questions/74764001/foreign-key-constraints-are-not-allowed-prisma 
    // Do not use foreign keys (PlanetScale does not support them)
    relationMode = "prisma"
}


// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId], name: "userId" )
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId], name: "userId")
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    Game          Game[]
 
}


enum GameType {
  normal 
  blitz
}


model Game {
  id           String   @id @default(cuid())
  userId       String
  timeStarted  DateTime
  profileCharacter  String
  username     String
  xpGained     Int    @default(200)
  level        Int    @default(1)
  highestStreak    String   @default("unranked")
  presitge     Int    @default(0)
  timeEnded    DateTime?
  gameType   GameType
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  questions     Question[]

  @@index([userId], name: "userId")
}

model Question {
  id          String   @id @default(cuid())
  question    String
  answer      String
  gameId      String
  options     Json?  
  percentageCorrect Float?
  isCorrect   Boolean?
  questionType GameType
  userAnswer  String?
  

  game       Game     @relation(fields: [gameId], references: [id], onDelete: Cascade)

  @@index([gameId], name: "gameId")
}


model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
